@* @page "/request"

@inject ISnackbar Snackbar
@using MudBlazor.Extensions


<MudGrid >
    <MudItem xs="12" >
        <MudStepper @ref="_stepper" ContentStyle="min-height: 400px" Linear="_linear" Vertical="_vertical" Color="_color" Variant=Variant.Filled DisableAnimation="_disableAnimation" HeaderTextView="_headerTextView"
                    PreventStepChange="new Func<bool>(CheckChange)" LocalizedStrings="GetLocalizedStrings()">

            <MudStep Title="Выбор тарифа" StatusChanged="StatusChanged">
                
                    <MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
                        <MudGrid>
                            <MudItem xs="12" sm="6">
                                <MudPaper Elevation="2" Class="pa-4" Style="height: 100%">
                                    <MudText>Статус заявителя</MudText>
                                    <MudForm @ref="_form2">
                                        <MudRadioGroup T="string" SelectedOption="@SelectedOption" SelectedOptionChanged="OnSelectedOptionChanged">
                                            <MudRadio Option="@("Ul")" Color="Color.Primary" >Юр. лицо</MudRadio>
                                            <MudRadio Option="@("Fl")" Color="Color.Primary">Физ. лицо</MudRadio>
                                        </MudRadioGroup>
                                    </MudForm>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="12" sm="6">
                                <MudPaper Elevation="2" Class="pa-4" Style="height: 100%">
                                    <MudText>Криптопровайдер</MudText>
                                    <MudForm @ref="_form2">
                                        <MudRadioGroup @bind-SelectedOption="@SelectedOption1">
                                            <MudRadio Option="@("Cpro")" Color="Color.Primary">Крипто Про CSP</MudRadio>
                                            <MudRadio Option="@("Vip")" Color="Color.Primary">VipNet CSP</MudRadio>
                                        </MudRadioGroup>
                                    </MudForm>
                                </MudPaper>
                            </MudItem>
                        </MudGrid>
                    </MudContainer>
            </MudStep>
             @if (IsJuridical)
            {
                <MudStep Title="Данные организации" >
                    <MudCheckBox T="bool" Label="Early Check-in" Color="_color" />
                    <MudCheckBox T="bool" Label="Late Check-out" Color="_color" />
                    <MudCheckBox T="bool" Label="Twin Bed" Color="_color" />
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="(() => _stepper.Reset())">Reset</MudButton>
                </MudStep>
                <MudStep Title="Выбор владельца">
                <MudForm @ref="_form2">
                    <MudStack>
                        <MudTextField T="string" Label="Card Number" Variant="_variant" Required="true" />
                        <MudStack Row="true">
                            <MudTextField T="string" Label="Expire Date" Variant="_variant" Required="true" />
                            <MudTextField T="string" Label="CVC" Variant="_variant" Required="true" />
                        </MudStack>
                    </MudStack>
                </MudForm>
            </MudStep>
            }
            @if (!IsJuridical)
            {
            <MudStep Title="Выбор владельца">
                <MudForm @ref="_form2">
                    <MudStack>
                        <MudTextField T="string" Label="Card Number" Variant="_variant" Required="true" />
                        <MudStack Row="true">
                            <MudTextField T="string" Label="Expire Date" Variant="_variant" Required="true" />
                            <MudTextField T="string" Label="CVC" Variant="_variant" Required="true" />
                        </MudStack>
                    </MudStack>
                </MudForm>
            </MudStep>
            }
           
           

            @if (_addResultStep)
            {
                <MudStep Title="Result Step" IsResultStep="true">
                    <div class="d-flex flex-column align-center justify-center" style="height: 200px">
                        <MudIconButton Icon="@Icons.Filled.DoneAll" Size="Size.Large" Variant="Variant.Filled" Color="Color.Success" />
                        <MudText>Your reservation succesfully completed.</MudText>
                    </div>
                </MudStep>
            }
        </MudStepper>
    </MudItem>

    @* <MudItem xs="12" sm="4" Style="box-shadow: rgba(240, 46, 170, 0.4) -3px 3px;">
        <MudStack Spacing="4">
            <MudCheckBox @bind-Checked="_linear" Color="Color.Primary" Label="Linear" Dense="true" />
            <MudCheckBox @bind-Checked="_disableAnimation" Color="Color.Primary" Label="Disable Animation" Dense="true" />
            <MudSwitch @bind-Checked="_addResultStep" Color="Color.Primary" Label="Has Result Step" />
            <MudSwitch @bind-Checked="_checkValidationBeforeComplete" Color="Color.Primary" Label="Check Validation Before Complete Step" />
            <MudSwitch @bind-Checked="_customLocalization" Color="Color.Primary" Label="Custom Localization (German)" />
            <MudSelect @bind-Value="_variant" Variant="Variant.Outlined" Label="Variant">
                @foreach (Variant item in Enum.GetValues<Variant>())
                {
                    <MudSelectItem Value="item">@item.ToDescriptionString()</MudSelectItem>
                }
            </MudSelect>
            <MudSelect @bind-Value="_color" Variant="Variant.Outlined" Label="Color">
                @foreach (Color item in Enum.GetValues<Color>())
                {
                    <MudSelectItem Value="item">@item.ToDescriptionString()</MudSelectItem>
                }
            </MudSelect>
            <MudSelect @bind-Value="_headerTextView" Variant="Variant.Outlined" Label="Header Text View">
                @foreach (HeaderTextView item in Enum.GetValues<HeaderTextView>())
                {
                    <MudSelectItem Value="item">@item.ToDescriptionString()</MudSelectItem>
                }
            </MudSelect>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="(() => _stepper.Reset())">Reset</MudButton>
        </MudStack>
    </MudItem> *@
@* </MudGrid>

@code {

    MudForm _form;
    MudForm _form2;
    bool _checkValidationBeforeComplete = false;
    bool _linear = true;
    bool IsJuridical = true;
    Variant _variant = Variant.Outlined;

    bool _disableAnimation = false;
    bool _addResultStep = true;
    bool _customLocalization = true;
    Color _color = Color.Primary;


    
    private bool CheckChange()
    {
        if (_checkValidationBeforeComplete == true)
        {
            if (_stepper.GetActiveIndex() == 0)
            {
                _form.Validate();
                return !_form.IsValid;
            }
            else if (_stepper.GetActiveIndex() == 2)
            {
                _form2.Validate();
                return !_form2.IsValid;
            }
            else
            {
                return false;
            }
        }
        else
        {
            return false;
        }
    }

    private void StatusChanged(StepStatus status)
    {
        Snackbar.Add($"First step {status.ToDescriptionString()}.", Severity.Info);
    }

    private StepperLocalizedStrings GetLocalizedStrings()
    {
        return new StepperLocalizedStrings()
            {
                Completed = "Завершено",
                Finish = "Отправить",
                Next = "Далее",
                Optional = "Не обязательно",
                Previous = "Назад",
                Skip = "Пропустить",
                Skipped = "Пропущено",
            };
        
    }

} *@ 
